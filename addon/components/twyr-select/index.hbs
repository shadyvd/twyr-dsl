<md-input-container
	class="{{if @selected "md-input-has-value"}}{{if this.isInvalidAndTouched " md-input-invalid"}}{{if this.isFocusedAndSelected " md-input-focused"}}"

	{{did-update this.didReceiveArgs @disabled}}
	{{did-mutate this.didMutate}}

	...attributes
>
	<TwyrPowerSelect
		@allowClear={{@allowClear}}
		@extra={{hash label=@label}}
		@options={{@options}}
		@placeholder={{@placeholder}}
		@selected={{@selected}}

		@search={{@search}}
		@searchEnabled={{@searchEnabled}}
		@searchField={{@searchField}}
		@searchPlaceholder={{@searchPlaceholder}}

		@calculateDropdownPosition={{this.calculatePosition}}

		@ebdTriggerComponent={{component this.subComponents.ebdTriggerComponent label=@label selected=@selected required=@required}}
		@ebdContentComponent={{component this.subComponents.ebdContentComponent powerSelect=this._TwyrSelect searchEnabled=@searchEnabled}}

		@triggerClass="{{if this.isInvalid "ng-invalid"}}{{if this.isTouched " ng-dirty"}}"
		@triggerComponent={{this.subComponents.epsTriggerComponent}}

		@beforeOptionsComponent={{this.subComponents.beforeOptionsComponent}}
		@optionsComponent={{this.subComponents.optionsComponent}}
		@noMatchesMessageComponent={{this.subComponents.noMatchesMessageComponent}}
		@searchMessageComponent={{this.subComponents.searchMessageComponent}}

		@onBlur={{this.onBlur}}
		@onChange={{this.onChange}}
		@onClose={{this.onClose}}
		@onFocus={{this.onFocus}}
		@onOpen={{this.onOpen}}

		as |Option PowerSelect|
	>
		{{#with
			(hash
				id=PowerSelect.id

				Controls=PowerSelect.Controls
				Options=PowerSelect.Options
				Status=(assign PowerSelect.Status this._selectStatus merge=true)
			)
			as |TwyrSelect|
		}}
			{{yield Option TwyrSelect}}
			<span class="d-none" {{did-insert (fn this.didInsertPowerSelect TwyrSelect)}} />
		{{/with}}
	</TwyrPowerSelect>
</md-input-container>
